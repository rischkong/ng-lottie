{"version":3,"sources":["../../../src/lottieAnimationView.component.ts"],"names":[],"mappings":"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","file":"lottieAnimationView.component.js","sourceRoot":"","sourcesContent":["import { Component, ElementRef, EventEmitter, Inject, Input, OnInit, Output, PLATFORM_ID, ViewChild } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\n\ndeclare let require: any;\nconst lottie: any = require('lottie-web/build/player/lottie.js');\n\n\n\nexport class LottieAnimationViewComponent implements OnInit {\n\n     options: any;\n     width: number;\n     height: number;\n\n\n     animCreated: any = new EventEmitter();\n\n    // Other event types\n    // onComplete\n    // onLoopComplete\n    // onEnterFrame\n    // onSegmentStart (TBD)\n     onComplete: any = new EventEmitter();\n     onLoopComplete: any = new EventEmitter();\n     onEnterFrame: any = new EventEmitter();\n\n\n     lavContainer: ElementRef;\n\n    public viewWidth: string;\n    public viewHeight: string;\n    private _options: any;\n\n    constructor( private platformId: string) {\n    }\n\n    ngOnInit() {\n\n        if (isPlatformServer(this.platformId)) {\n            return;\n        }\n\n        this._options = {\n            container: this.lavContainer.nativeElement,\n            renderer: this.options.renderer || 'svg',\n            loop: this.options.loop !== false,\n            autoplay: this.options.autoplay !== false,\n            autoloadSegments: this.options.autoloadSegments !== false,\n            animationData: this.options.animationData,\n            path: this.options.path || '',\n            rendererSettings: this.options.rendererSettings || {}\n        };\n\n        this.viewWidth = this.width + 'px' || '100%';\n        this.viewHeight = this.height + 'px' || '100%';\n        // DONE: Safari BUG\n        lottie.setLocationHref(document.location.href);\n\n        let anim: any = lottie.loadAnimation(this._options);\n        this.animCreated.emit(anim);\n\n        // addListener\n        anim.addEventListener('complete', this.emitComplete(anim));\n        anim.addEventListener('loopComplete', this.emitComplete(anim));\n        anim.addEventListener('enterFrame', this.emitComplete(anim));\n\n    }\n\n    emitComplete(anim: any) {\n        this.onComplete.emit(anim);\n    }\n\n    emitLoopComplete(anim: any) {\n        this.onLoopComplete.emit(anim);\n    }\n\n    emitEnterFrame(anim: any) {\n        this.onEnterFrame.emit(anim);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'lottie-animation-view',\n    template: `\n        <div #lavContainer\n             [ngStyle]=\"{'width': viewWidth, 'height': viewHeight, 'overflow':'hidden', 'margin': '0 auto'}\">\n        </div>`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'options': [{ type: Input },],\n'width': [{ type: Input },],\n'height': [{ type: Input },],\n'animCreated': [{ type: Output },],\n'onComplete': [{ type: Output },],\n'onLoopComplete': [{ type: Output },],\n'onEnterFrame': [{ type: Output },],\n'lavContainer': [{ type: ViewChild, args: ['lavContainer', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}